- id: "5002"
  alias: Solax Reset Mode After Manual Discharge
  description:
    "# 5002 - Solax Reset Mode After Manual Discharge\nAfter a force/regular
    discharge set the mode back to default mode when the SoC threshold is met. In
    a free Electric discharge, feed in priority is used to prevent the battery filling
    if it's sunny. After free electric session is done default mode is returned. \n\n#
    Initial installation instructions\n1. This is 5002 only you need 5001 5003 5004
    and 5005. files are kept seperate in repo for ease of maintenance\n2. replace
    z_ZZZZZZZZ with your Octopus Account Number\n3. Copy and Paste into your automations.yaml\n\n#
    Change log\nv2.1.0 - Changes to limits to catch the battery closer to the required
    threshold set by user\nv2.0.0 -productionisation\n"
  triggers:
    - entity_id:
        - sensor.solax_local_battery_soc
      below: input_number.solax_manual_forced_discharge_limit_soc
      for:
        hours: 0
        minutes: 1
        seconds: 1
      id: Normal Stop Discharge
      trigger: numeric_state
      value_template: "{{ state.state | float(0)  - 3 }}"
    - entity_id:
        - sensor.solax_local_battery_soc
      below: input_number.octopus_free_session_battery_prep_soc
      for:
        hours: 0
        minutes: 1
        seconds: 1
      id: FreeElectric
      trigger: numeric_state
      value_template: "{{ state.state | float(0)  - 3 }}"
    - entity_id:
        - sensor.solax_local_battery_soc
      below: input_number.octopus_saving_session_target_battery_soc
      for:
        hours: 0
        minutes: 1
        seconds: 1
      id: Saving Session Stop Discharge
      trigger: numeric_state
      value_template: "{{ state.state | float(0)  - 3 }}"
  conditions:
    - condition: template
      value_template: "{{ (states('sensor.solax_local_inverter_mode') == 'Manual')|bool==true}}"
  actions:
    - action: input_boolean.turn_on
      metadata: {}
      data: {}
      target:
        entity_id: input_boolean.solax_automation_running
    - variables:
        default_mode: "{{states('sensor.solax_default_operation_mode')|int(default=0)}}"
        mode_delay: 15
        settings_delay: 5
        refresh_settings_delay: 5
    - choose:
        - conditions:
            - condition: trigger
              id:
                - FreeElectric
            - condition: state
              entity_id: binary_sensor.octopus_energy_z_ZZZZZZZZ_intelligent_dispatching
              state: "off"
            - condition: state
              entity_id: binary_sensor.free_electricity_today
              state: "on"
            - condition: time
              after: input_datetime.octopus_free_electricity_prep
              before: "23:00:00"
          sequence:
            - repeat:
                sequence:
                  - data:
                      value: "{{1}}"
                    action: rest_command.solax_local_set_inverter_mode
                  - delay:
                      hours: 0
                      minutes: 0
                      seconds: "{{mode_delay}}"
                      milliseconds: 0
                  - data:
                      value: 0
                    action: rest_command.solax_local_set_manual_mode_behaviour
                  - delay:
                      hours: 0
                      minutes: 0
                      seconds: "{{mode_delay}}"
                      milliseconds: 0
                  - action: homeassistant.update_entity
                    data:
                      entity_id:
                        - sensor.solax_rest_local_settings
                  - delay:
                      hours: 0
                      minutes: 0
                      seconds: "{{refresh_settings_delay}}"
                      milliseconds: 0
                until:
                  - condition: template
                    value_template:
                      "{{ (state_attr('sensor.solax_local_settings', 'Data')[10]
                      == default_mode) or repeat.index == 3 }}"
            - event: Solax Zappi Octopus Control
              event_data:
                message: "Discharge finished @ {{now().strftime('%H:%M')}}. "
                title: Free Electric Battery Export Prep
                class: normal
              enabled: true
        - conditions:
            - condition: trigger
              id:
                - Normal Stop Discharge
          sequence:
            - repeat:
                sequence:
                  - data:
                      value: "{{default_mode}}"
                    action: rest_command.solax_local_set_inverter_mode
                  - delay:
                      hours: 0
                      minutes: 0
                      seconds: "{{mode_delay}}"
                      milliseconds: 0
                  - data:
                      value: 0
                    action: rest_command.solax_local_set_manual_mode_behaviour
                  - delay:
                      hours: 0
                      minutes: 0
                      seconds: "{{mode_delay}}"
                      milliseconds: 0
                  - action: homeassistant.update_entity
                    data:
                      entity_id:
                        - sensor.solax_rest_local_settings
                  - delay:
                      hours: 0
                      minutes: 0
                      seconds: "{{refresh_settings_delay}}"
                      milliseconds: 0
                until:
                  - condition: template
                    value_template:
                      "{{ (state_attr('sensor.solax_local_settings', 'Data')[10]
                      == default_mode) or repeat.index == 3 }}"
            - event: Solax Zappi Octopus Control
              event_data:
                message: "Discharge finished @ {{now().strftime('%H:%M')}}. "
                title: Battery Export
                class: normal
              enabled: true
        - conditions:
            - condition: trigger
              id:
                - Saving Session Stop Discharge
            - condition: state
              entity_id: input_select.saving_session_today
              state: "yes"
            - condition: time
              after: 05:30:00
              before: "23:30:00"
            - condition: time
              after: input_datetime.saving_session_start
          sequence:
            - repeat:
                sequence:
                  - data:
                      value: "{{default_mode}}"
                    action: rest_command.solax_local_set_inverter_mode
                  - delay:
                      hours: 0
                      minutes: 0
                      seconds: "{{mode_delay}}"
                      milliseconds: 0
                  - data:
                      value: 0
                    action: rest_command.solax_local_set_manual_mode_behaviour
                  - delay:
                      hours: 0
                      minutes: 0
                      seconds: "{{mode_delay}}"
                      milliseconds: 0
                  - action: homeassistant.update_entity
                    data:
                      entity_id:
                        - sensor.solax_rest_local_settings
                  - delay:
                      hours: 0
                      minutes: 0
                      seconds: "{{refresh_settings_delay}}"
                      milliseconds: 0
                until:
                  - condition: template
                    value_template:
                      "{{ (state_attr('sensor.solax_local_settings', 'Data')[10]
                      == default_mode) or repeat.index == 3 }}"
            - event: Solax Zappi Octopus Control
              event_data:
                message: "Discharge finished @ {{now().strftime('%H:%M')}}. "
                title: Saving Session Battery Exported
                class: normal
              enabled: true
    - action: input_boolean.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: input_boolean.solax_automation_running
  mode: queued
  max: 3
