- id: "6002"
  alias: Octopus - Saving Sessions Automation
  description:
    "# 6002 - Automatically join Octopus Saving Session Events\nAutomation
    to automatically or manually join a saving session. Prepares Battery by charging
    before session.\nDischarges Battery in the session and stops Zappi.\nReturns to
    normal operation.\n\n# Initial config instructions\n1. Find and replace:\nzappi_XXXXXXXX
    with your zappi number, \nz_ZZZZZZZZ with Octopus account\n2. Paste into your
    automations.yaml\n\n# Change log\nv2.1.3 - Added Prep options and ability to stop
    the battery prep once battery is at target SoC\nv2.1 - Removed legacy dev work\nv2.0
    - Rework for manual joining\nv1.1 - Initial"
  triggers:
    - event_type: octopus_energy_new_octoplus_saving_session
      trigger: event
      id: Octopus New Saving Session
      enabled: true
    - trigger: state
      entity_id:
        - sensor.octopus_is_there_a_saving_session_today
      id: Is there a session today?
    - trigger: state
      entity_id:
        - input_select.saving_session_today
      from: "no"
      to: "yes"
      id: saving session changes to yes
    - trigger: state
      entity_id:
        - input_select.saving_session_today
      from: "yes"
      to: "no"
      id: saving session changes to no
    - trigger: time
      at: input_datetime.saving_session_start
      id: Start Discharge
    - trigger: time
      at: input_datetime.saving_session_end
      id: Saving Session Ended
    - trigger: time
      at: input_datetime.solax_start_charge_2
      id: Pre Saving Session
    - trigger: state
      entity_id:
        - input_boolean.octopus_saving_session_manual
      to: "on"
      id: Manual
    - trigger: state
      entity_id:
        - input_boolean.octopus_saving_session_manual
      to: "off"
      id: Is there a session today?
      for:
        hours: 0
        minutes: 1
        seconds: 0
    - trigger: numeric_state
      entity_id:
        - sensor.solax_local_battery_soc
      above: input_number.octopus_saving_session_target_battery_charge_soc
      id: Stop Battery Prep SoC
    - trigger: state
      entity_id:
        - input_number.octopus_saving_session_prep_time
      id: Update charge period
      for:
        hours: 0
        minutes: 1
        seconds: 0
  conditions: []
  actions:
    - variables:
        default_mode: "{{states('sensor.solax_default_operation_mode')|int(default=0)}}"
        mode_delay: 15
        settings_delay: 15
        refresh_settings_delay: 10
    - choose:
        - conditions:
            - condition: trigger
              id:
                - Octopus New Saving Session
          sequence:
            - data:
                event_code:
                  "{{ state_attr(saving_session_event_entity, 'available_events')[0]['code']
                  }}"
              target:
                entity_id: event.octopus_energy_z_ZZZZZZZZ_octoplus_saving_session_events
              action: octopus_energy.join_octoplus_saving_session_event
            - event: Solax Zappi Octopus Control
              event_data:
                message:
                  "{% set event = state_attr(saving_session_event_entity,\n  'available_events')[0]
                  %} {% set event_start = event['start'] %} Joined a\n  new Octopus Energy
                  saving session. It starts at {{\n  event_start.strftime('%H:%M') }} on
                  {{ event_start.day }}/{{\n  event_start.month }} for {{ event.duration_in_minutes
                  | int }} minutes.\n"
                title: Octopus Saving Sessions Updated
                class: high
              enabled: true
        - conditions:
            - condition: trigger
              id:
                - Is there a session today?
            - condition: state
              entity_id: input_boolean.octopus_saving_session_manual
              state: "off"
          sequence:
            - action: input_datetime.set_datetime
              data_template:
                datetime: "{{state_attr('sensor.octopus_is_there_a_saving_session_today','session_start')}}"
                entity_id: input_datetime.saving_session_start
            - action: input_datetime.set_datetime
              data_template:
                datetime: "{{state_attr('sensor.octopus_is_there_a_saving_session_today','session_end')}}"
                entity_id: input_datetime.saving_session_end
            - action: input_select.select_option
              metadata: {}
              data:
                option: "{{states('sensor.octopus_is_there_a_saving_session_today')}}"
              target:
                entity_id: input_select.saving_session_today
            - if:
                - condition: state
                  entity_id: input_select.saving_session_today
                  state: "no"
              then:
                - action: input_boolean.turn_on
                  metadata: {}
                  data: {}
                  target:
                    entity_id: input_boolean.solax_automation_running
                - data:
                    enabled: "{{ 0 }}

                      "
                  action: rest_command.solax_local_set_period2_enable
                - delay:
                    hours: 0
                    minutes: 0
                    seconds: "{{settings_delay}}"
                    milliseconds: 0
                - action: input_boolean.turn_off
                  metadata: {}
                  data: {}
                  target:
                    entity_id: input_boolean.solax_automation_running
        - conditions:
            - condition: trigger
              id:
                - saving session changes to yes
                - Manual
                - Update charge period
            - condition: template
              value_template:
                "{{ (states('input_select.saving_session_today') == 'yes'
                \n    and states('input_datetime.saving_session_start') != None) \n    or
                states('input_boolean.octopus_saving_session_manual') == 'on'}}"
            - condition: template
              value_template:
                "{{(state_attr('sensor.solax_local_settings', 'Data')[10]
                != 3)}}"
          sequence:
            - action: input_boolean.turn_on
              metadata: {}
              data: {}
              target:
                entity_id: input_boolean.solax_automation_running
            - repeat:
                sequence:
                  - data:
                      enabled: "{{ 1 }}

                        "
                    action: rest_command.solax_local_set_period2_enable
                  - delay:
                      hours: 0
                      minutes: 0
                      seconds: "{{settings_delay}}"
                      milliseconds: 0
                  - data:
                      value:
                        "{% set start_time = as_datetime(state_attr('input_datetime.saving_session_start',
                        'timestamp') - states('input_number.octopus_saving_session_prep_time')|int*60)
                        %} {{ start_time.hour + start_time.minute * 256 }}"
                    action: rest_command.solax_local_set_forced_charge_start2
                  - delay:
                      hours: 0
                      minutes: 0
                      seconds: "{{settings_delay}}"
                      milliseconds: 0
                  - data:
                      value:
                        "{% set end_time = as_datetime(state_attr('input_datetime.saving_session_start',
                        'timestamp') - 60) %} {{ end_time.hour + end_time.minute * 256 }}"
                    action: rest_command.solax_local_set_forced_charge_stop2
                  - delay:
                      hours: 0
                      minutes: 0
                      seconds: "{{settings_delay}}"
                      milliseconds: 0
                  - action: homeassistant.update_entity
                    data:
                      entity_id:
                        - sensor.solax_rest_local_settings
                  - delay:
                      hours: 0
                      minutes: 0
                      seconds: "{{refresh_settings_delay}}"
                until:
                  - condition: template
                    value_template:
                      "{% set end_time = as_datetime(state_attr('input_datetime.saving_session_start',
                      'timestamp') - 60).strftime('%H:%M') %} \n{% set start_time =\n    as_datetime(state_attr('input_datetime.saving_session_start',
                      'timestamp') -\n    states('input_number.octopus_saving_session_prep_time')|int*60)
                      %} {{\n    start_time.hour + start_time.minute * 256 }}\n{{ (states('sensor.solax_local_battery_chd2_enabled')|bool==true
                      \n    and states('sensor.solax_local_battery_setting_stop_charge_2')
                      == end_time\n    and states('sensor.solax_local_battery_setting_start_charge_2')
                      == start_time)\n    or repeat.index == 3 }}"
            - action: input_boolean.turn_off
              metadata: {}
              data: {}
              target:
                entity_id: input_boolean.solax_automation_running
        - conditions:
            - condition: trigger
              id:
                - Pre Saving Session
            - condition: or
              conditions:
                - condition: state
                  entity_id: input_select.saving_session_today
                  state: "yes"
                - condition: state
                  entity_id: input_boolean.octopus_saving_session_manual
                  state: "on"
            - condition: time
              after: input_datetime.solax_start_charge_2
              before: input_datetime.solax_stop_charge_2
          sequence:
            - if:
                - condition: numeric_state
                  entity_id: sensor.solax_local_battery_soc
                  above: input_number.octopus_saving_session_target_battery_charge_soc
              then:
                - data:
                    enabled: "{{ 0 }}

                      "
                  action: rest_command.solax_local_set_period2_enable
                - delay:
                    hours: 0
                    minutes: 0
                    seconds: "{{settings_delay}}"
                    milliseconds: 0
              else:
                - action: input_boolean.turn_on
                  metadata: {}
                  data: {}
                  target:
                    entity_id: input_boolean.zappi_eco_mode_override
            - event: Solax Zappi Octopus Control
              event_data:
                message:
                  Battery prep checking started @ {{now().strftime('%H:%M')}}. Battery
                  @ {{states('sensor.solax_local_battery_soc')}}%
                title: Charge Period 2 Active
                class: high
              enabled: true
        - conditions:
            - condition: trigger
              id:
                - Stop Battery Prep SoC
            - condition: time
              after: input_datetime.solax_start_charge_2
              before: input_datetime.solax_stop_charge_2
            - condition: state
              entity_id: input_boolean.solaxchargeperiod2
              state: "on"
          sequence:
            - data:
                enabled: "{{ 0 }}

                  "
              action: rest_command.solax_local_set_period2_enable
            - delay:
                hours: 0
                minutes: 0
                seconds: "{{settings_delay}}"
                milliseconds: 0
        - conditions:
            - condition: trigger
              id:
                - Start Discharge
            - condition: or
              conditions:
                - condition: state
                  entity_id: input_select.saving_session_today
                  state: "yes"
                - condition: state
                  entity_id: input_boolean.octopus_saving_session_manual
                  state: "on"
          sequence:
            - action: input_boolean.turn_on
              metadata: {}
              data: {}
              target:
                entity_id: input_boolean.solax_automation_running
            - if:
                - condition: numeric_state
                  entity_id: sensor.solax_local_battery_soc
                  above: input_number.solax_manual_forced_discharge_limit_soc
                  value_template: "{{ state.state | float(0)  - 4 }}"
              then:
                - repeat:
                    sequence:
                      - data:
                          value: 3
                        action: rest_command.solax_local_set_inverter_mode
                      - delay:
                          hours: 0
                          minutes: 0
                          seconds: "{{mode_delay}}"
                          milliseconds: 0
                      - data:
                          value: 2
                        action: rest_command.solax_local_set_manual_mode_behaviour
                      - delay:
                          hours: 0
                          minutes: 0
                          seconds: "{{mode_delay}}"
                          milliseconds: 0
                      - action: homeassistant.update_entity
                        data:
                          entity_id:
                            - sensor.solax_rest_local_settings
                      - delay:
                          hours: 0
                          minutes: 0
                          seconds: "{{refresh_settings_delay}}"
                    until:
                      - condition: template
                        value_template:
                          "{{ (state_attr('sensor.solax_local_settings', 'Data')[10]
                          == 3 and state_attr('sensor.solax_local_settings', 'Data')[11]
                          == 2) or repeat.index == 3 }}"
            - action: switch.turn_off
              metadata: {}
              data: {}
              target:
                entity_id: switch.octopus_energy_z_ZZZZZZZZ_intelligent_smart_charge
            - action: select.select_option
              metadata: {}
              data:
                option: Stopped
              target:
                entity_id: select.myenergi_zappi_XXXXXXXX_charge_mode
            - action: input_boolean.turn_off
              metadata: {}
              data: {}
              target:
                entity_id: input_boolean.solax_automation_running
            - event: Solax Zappi Octopus Control
              event_data:
                message: "Attempting Discharge at {{now().strftime('%H:%M') }}

                  "
                title: Octopus Saving Sessions - Discharging
                class: high
              enabled: true
        - conditions:
            - condition: trigger
              id:
                - Saving Session Ended
            - condition: or
              conditions:
                - condition: state
                  entity_id: input_select.saving_session_today
                  state: "yes"
                - condition: state
                  entity_id: input_boolean.octopus_saving_session_manual
                  state: "on"
          sequence:
            - repeat:
                sequence:
                  - data:
                      value: "{{default_mode}}"
                    action: rest_command.solax_local_set_inverter_mode
                  - delay:
                      hours: 0
                      minutes: 0
                      seconds: "{{mode_delay}}"
                      milliseconds: 0
                  - action: homeassistant.update_entity
                    data:
                      entity_id:
                        - sensor.solax_rest_local_settings
                  - delay:
                      hours: 0
                      minutes: 0
                      seconds: "{{refresh_settings_delay}}"
                      milliseconds: 0
                until:
                  - condition: template
                    value_template:
                      "{{ (state_attr('sensor.solax_local_settings', 'Data')[10]
                      == default_mode) or repeat.index == 3 }}"
            - action: input_boolean.turn_on
              metadata: {}
              data: {}
              target:
                entity_id: input_boolean.zappi_eco_mode_override
            - action: input_boolean.turn_off
              metadata: {}
              data: {}
              target:
                entity_id: input_boolean.octopus_saving_session_manual
            - event: Solax Zappi Octopus Control
              event_data:
                message:
                  "Octopus Saving Session ended @ {{now().strftime('%H:%M')}}.
                  Battery @

                  {{states('sensor.solax_local_battery_soc')}}%. Some Octopus/inverter

                  settings may need updating. Please check.

                  "
                title: Saving Session Ended
                class: high
              enabled: true
        - conditions:
            - condition: trigger
              id:
                - saving session changes to no
            - condition: template
              value_template: "{{ states('sensor.solax_local_battery_chd2_enabled')|bool==true}}"
          sequence:
            - action: input_boolean.turn_on
              metadata: {}
              data: {}
              target:
                entity_id: input_boolean.solax_automation_running
            - repeat:
                sequence:
                  - data:
                      enabled: "{{ 0 }}

                        "
                    action: rest_command.solax_local_set_period2_enable
                  - delay:
                      hours: 0
                      minutes: 0
                      seconds: "{{settings_delay}}"
                      milliseconds: 0
                  - action: homeassistant.update_entity
                    data:
                      entity_id:
                        - sensor.solax_rest_local_settings
                  - delay:
                      hours: 0
                      minutes: 0
                      seconds: "{{refresh_settings_delay}}"
                until:
                  - condition: template
                    value_template:
                      "{{ (states('sensor.solax_local_battery_chd2_enabled')|bool==false)
                      or repeat.index == 3 }}"
            - action: input_boolean.turn_off
              metadata: {}
              data: {}
              target:
                entity_id: input_boolean.solax_automation_running
  trace:
    stored_traces: 20
  mode: queued
  max: 5
