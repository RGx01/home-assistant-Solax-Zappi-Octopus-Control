###############################################
# Replace octopus account number z_ZZZZZZZZ
###############################################
octoplus_sessions_templates:
  template:
    ######################################################
    # Octopus free/saving sensors
    # V5.0   Refactor
    # v4.    Plannning to removed saving sessions because they are pointless
    #.       Refined free sessions to new IOG tariff as of 4/8/2025
    # v2.1.3 moved tariff switching for free electric to this package
    # v2.1.2 Enhancements to Free Electric
    #        Enhancements to saving sessions:
    #        1. Automation 6003 is not required anymore
    #        2. Automation 6002 Options to limit prep time and prep SoC
    #        3. Automation 6002 Added checking during prep to turn off
    #           charge period 2 once prep SoC is reached
    #        4. Automation 6002 clean up and simplification
    #
    ######################################################
    # Octopus Saving Session
    - trigger:
        - trigger: time_pattern
          minutes: /30
        - trigger: state
          entity_id: binary_sensor.octopus_energy_z_ZZZZZZZZ_octoplus_saving_sessions
          not_to:
            - unavailable
            - unknown
        - trigger: state
          entity_id: binary_sensor.octopus_energy_z_ZZZZZZZZ_octoplus_saving_sessions
          attribute: next_joined_event_start
      sensor:
        - name: "Octopus - Is there a Saving Session today?"
          unique_id: octopus_is_there_a_saving_session_today
          state: >
            {% if state_attr('binary_sensor.octopus_energy_z_ZZZZZZZZ_octoplus_saving_sessions','current_joined_event_start') != 'unknown'%}
            {% set current_event = state_attr('binary_sensor.octopus_energy_z_ZZZZZZZZ_octoplus_saving_sessions','current_joined_event_start') %} 
            {% set next_event =state_attr('binary_sensor.octopus_energy_z_ZZZZZZZZ_octoplus_saving_sessions','next_joined_event_start') %} 
            {% set upcoming_event = current_event if (current_event != None) else next_event %} 
            {{ 'yes' if (upcoming_event !=None and upcoming_event.strftime('%j') == now().strftime('%j')) else 'no' }}
            {%else%}
            {% set current_event =None %} 
            {% set next_event =None %} 
            {{'no'}}
            {%endif%}
          attributes:
            session_start: >
              {% if state_attr('binary_sensor.octopus_energy_z_ZZZZZZZZ_octoplus_saving_sessions','current_joined_event_start') != 'unknown'%}
              {% set current_event = state_attr('binary_sensor.octopus_energy_z_ZZZZZZZZ_octoplus_saving_sessions','current_joined_event_start') %} 
              {% set next_event =state_attr('binary_sensor.octopus_energy_z_ZZZZZZZZ_octoplus_saving_sessions','next_joined_event_start') %} 
              {%else%}
              {% set current_event =None %} 
              {% set next_event =None %} 
              {%endif%}
              {% set upcoming_event = current_event if (current_event != None) else next_event %} 
              {{ (now() + timedelta(days=7)).strftime('%Y-%m-%d 00:00:00') if (upcoming_event == None) else upcoming_event}}
            session_end: >
              {% if state_attr('binary_sensor.octopus_energy_z_ZZZZZZZZ_octoplus_saving_sessions','current_joined_event_end') != 'unknown'%}
              {% set current_event_end = state_attr('binary_sensor.octopus_energy_z_ZZZZZZZZ_octoplus_saving_sessions','current_joined_event_end') %} 
              {% set next_event_end =state_attr('binary_sensor.octopus_energy_z_ZZZZZZZZ_octoplus_saving_sessions','next_joined_event_end')   %} 
              {%else%}
              {% set current_event_end =None %} 
              {% set next_event_end =None %} 
              {%endif%}
              {% set upcoming_event_end = current_event_end if (current_event_end != None) else next_event_end %} 
              {{ (now() + timedelta(days=7)).strftime('%Y-%m-%d 01:00:00') if (upcoming_event_end == None) else upcoming_event_end}}


    ######################################################
    #Octopus free electric start
    ######################################################
    - sensor:
        - name: Octopus Free Electricity Start
          unique_id: octopus_free_electricity_start
          device_class: "timestamp"
          state: >
            {{as_datetime(state_attr('input_datetime.octopus_free_electricity_start','timestamp')-120)|as_local}}

    ######################################################
    #Octopus free electric stop
    ######################################################
    - sensor:
        - name: Octopus Free Electric Stop
          unique_id: octopus_free_electric_stop
          device_class: "timestamp"
          state: >
            {{as_datetime(state_attr('input_datetime.octopus_free_electricity_stop','timestamp'))|as_local}}

    ######################################################
    # binary_sensor.free_electricity_today
    ######################################################
    # - binary_sensor:
    #     - name: Free Electricity Today
    #       unique_id: free_electricity_today
    #       state: >
    #         {% set events = state_attr('event.octopus_energy_z_ZZZZZZZZ_octoplus_free_electricity_session_events','events') %}
    #         {% if events %}
    #           {% set today = now().date().isoformat() %}
    #           {% set event = events | selectattr('start','search', today) | first %}
    #           {% if event is defined %}
    #             {# sensor is ON if current time < event end #}
    #             {{ now() < (event['end'] | as_datetime | as_local) }}
    #           {% else %}
    #             false
    #           {% endif %}
    #         {% else %}
    #           false
    #         {% endif %}
    #       attributes:
    #         session_start: >
    #           {% set events = state_attr('event.octopus_energy_z_ZZZZZZZZ_octoplus_free_electricity_session_events','events') %}
    #           {% if events %}
    #             {% set today = now().date().isoformat() %}
    #             {% set event = events | selectattr('start','search', today) | first %}
    #             {{ event['start'] | as_datetime | as_local if event is defined else none }}
    #           {% else %}
    #             {{ none }}
    #           {% endif %}

    #         session_end: >
    #           {% set events = state_attr('event.octopus_energy_z_ZZZZZZZZ_octoplus_free_electricity_session_events','events') %}
    #           {% if events %}
    #             {% set today = now().date().isoformat() %}
    #             {% set event = events | selectattr('start','search', today) | first %}
    #             {{ event['end'] | as_datetime | as_local if event is defined else none }}
    #           {% else %}
    #             {{ none }}
    #           {% endif %}

    #         duration: >
    #           {% set events = state_attr('event.octopus_energy_z_ZZZZZZZZ_octoplus_free_electricity_session_events','events') %}
    #           {% if events %}
    #             {% set today = now().date().isoformat() %}
    #             {% set event = events | selectattr('start','search', today) | first %}
    #             {{ event['duration_in_minutes'] | int if event is defined else 0 }}
    #           {% else %}
    #             0
    #           {% endif %}

    - binary_sensor:
        - name: Free Electricity Today
          unique_id: free_electricity_today
          # This binary sensor shows ON if today has a free electricity session
          # that is currently still running.
          # Otherwise, it is OFF.
          state: >
            {% set events = state_attr('event.octopus_energy_z_ZZZZZZZZ_octoplus_free_electricity_session_events','events') %}
            {% set now_dt = now() %}
            {% if events %}
              {# Try to find today’s session by matching today’s date in 'start' #}
              {% set today_event = events | selectattr('start','search', now_dt.date().isoformat()) | first %}
              {% if today_event is defined and today_event['end'] not in [none,''] %}
                {% set end_dt = today_event['end'] | as_datetime | as_local %}
                {{ now_dt < end_dt }}
              {% else %}
                false
              {% endif %}
            {% else %}
              false
            {% endif %}

          attributes:
            session_start: >
              {# Attribute that holds the start time of the "current" session: #}
              {# - If there is a session today, it shows today’s start. #}
              {# - If no session today, it shows the start of the *next upcoming* session. #}
              {# - If no future sessions exist, it falls back to the last known session. #}
              {% set events = state_attr('event.octopus_energy_z_ZZZZZZZZ_octoplus_free_electricity_session_events','events') %}
              {% set now_dt = now() %}
              {% set ns = namespace(future_events=[]) %}
              {% set today_event = events | selectattr('start','search', now_dt.date().isoformat()) | first if events else none %}

              {% if today_event is defined and today_event['start'] not in [none,''] %}
                {{ today_event['start'] | as_datetime | as_local }}

              {% elif events %}
                {# Build a list of all future sessions after now #}
                {% for e in events %}
                  {% if e.start not in [none,''] %}
                    {% set e_start_dt = e.start | as_datetime %}
                    {% if e_start_dt > now_dt %}
                      {% set ns.future_events = ns.future_events + [e] %}
                    {% endif %}
                  {% endif %}
                {% endfor %}

                {# Sort by start date and pick the next event, or fallback to last known #}
                {% set ns.future_events = ns.future_events | sort(attribute='start') %}
                {% set next_event = ns.future_events[0] if ns.future_events | length > 0 else none %}

                {% if next_event not in [none,''] %}
                  {{ next_event['start'] | as_datetime | as_local }}
                {% elif events | length > 0 %}
                  {% set last_event = events | last %}
                  {{ last_event['start'] | as_datetime | as_local }}
                {% else %}
                  none
                {% endif %}

              {% else %}
                none
              {% endif %}

            session_end: >
              {# Attribute that holds the end time of the "current" session: #}
              {# - Today’s end if there is one. #}
              {# - Next session’s end if there isn’t one today.#}
              {# - Falls back to the last known session’s end if no future events exist. #}
              {% set events = state_attr('event.octopus_energy_z_ZZZZZZZZ_octoplus_free_electricity_session_events','events') %}
              {% set now_dt = now() %}
              {% set ns = namespace(future_events=[]) %}
              {% set today_event = events | selectattr('start','search', now_dt.date().isoformat()) | first if events else none %}

              {% if today_event is defined and today_event['end'] not in [none,''] %}
                {{ today_event['end'] | as_datetime | as_local }}

              {% elif events %}
                {% for e in events %}
                  {% if e.start not in [none,''] %}
                    {% set e_start_dt = e.start | as_datetime %}
                    {% if e_start_dt > now_dt %}
                      {% set ns.future_events = ns.future_events + [e] %}
                    {% endif %}
                  {% endif %}
                {% endfor %}

                {% set ns.future_events = ns.future_events | sort(attribute='start') %}
                {% set next_event = ns.future_events[0] if ns.future_events | length > 0 else none %}

                {% if next_event not in [none,''] and next_event['end'] not in [none,''] %}
                  {{ next_event['end'] | as_datetime | as_local }}
                {% elif events | length > 0 %}
                  {% set last_event = events | last %}
                  {{ last_event['end'] | as_datetime | as_local }}
                {% else %}
                  none
                {% endif %}

              {% else %}
                none
              {% endif %}

            duration: >
              {# Attribute that holds the duration (minutes) of the "current" session: #}
              {# - Today’s duration if today has a session. #}
              {# - Next upcoming session’s duration if not today. #}
              {# - Falls back to the last known session duration if no future exists. #}
              {% set events = state_attr('event.octopus_energy_z_ZZZZZZZZ_octoplus_free_electricity_session_events','events') %}
              {% set now_dt = now() %}
              {% set ns = namespace(future_events=[]) %}
              {% set today_event = events | selectattr('start','search', now_dt.date().isoformat()) | first if events else none %}

              {% if today_event is defined and today_event['duration_in_minutes'] not in [none,''] %}
                {{ today_event['duration_in_minutes'] | int }}

              {% elif events %}
                {% for e in events %}
                  {% if e.start not in [none,''] %}
                    {% set e_start_dt = e.start | as_datetime %}
                    {% if e_start_dt > now_dt %}
                      {% set ns.future_events = ns.future_events + [e] %}
                    {% endif %}
                  {% endif %}
                {% endfor %}

                {% set ns.future_events = ns.future_events | sort(attribute='start') %}
                {% set next_event = ns.future_events[0] if ns.future_events | length > 0 else none %}

                {% if next_event not in [none,''] and next_event['duration_in_minutes'] not in [none,''] %}
                  {{ next_event['duration_in_minutes'] | int }}
                {% elif events | length > 0 %}
                  {% set last_event = events | last %}
                  {{ last_event['duration_in_minutes'] | int }}
                {% else %}
                  0
                {% endif %}

              {% else %}
                0
              {% endif %}

################################################################

    - trigger: 
        # Trigger whenever session_start attribute changes
        - trigger: state
          entity_id: binary_sensor.free_electricity_today
          attribute: session_start

        # Trigger whenever session_end attribute changes
        - trigger: state
          entity_id: binary_sensor.free_electricity_today
          attribute: session_end

        # Fallback: also update once per minute
        # (avoids "1970-01-01" default issue on HA restart,
        #  ensures input_datetimes always sync with attributes)
        - trigger: time_pattern
          minutes: "/1"

      action:
        # Update input_datetime for session start
        - service: input_datetime.set_datetime
          data:
            timestamp: >
              {% set ts = state_attr('binary_sensor.free_electricity_today','session_start') %}
              {{ ts | as_timestamp(default=0) }}
          target:
            entity_id: input_datetime.octopus_free_electricity_start

        # Update input_datetime for session end
        - service: input_datetime.set_datetime
          data:
            timestamp: >
              {% set ts = state_attr('binary_sensor.free_electricity_today','session_end') %}
              {{ ts | as_timestamp(default=0) }}
          target:
            entity_id: input_datetime.octopus_free_electricity_stop

################################################################

    - binary_sensor:
        - name: Upcoming Free Electricity
          unique_id: upcoming_free_electricity
          # This binary sensor shows ON if there is an upcoming free electricity session
          # (not today), and OFF otherwise.
          # Rules:
          # - If today's session exists and has not finished yet → OFF
          # - If today's session has finished and another session is scheduled later → ON
          # - If there are no sessions at all → OFF
          state: >
            {% set events = state_attr('event.octopus_energy_z_ZZZZZZZZ_octoplus_free_electricity_session_events','events') %}
            {% set now_dt = now() %}
            {% if events %}
              {# collect all events that start after now into a namespace #}
              {% set ns = namespace(future_events=[]) %}
              {% for e in events %}
                {% if e.start not in [none,''] %}
                  {% set e_start_dt = e.start | as_datetime %}
                  {% if e_start_dt > now_dt %}
                    {% set ns.future_events = ns.future_events + [e] %}
                  {% endif %}
                {% endif %}
              {% endfor %}

              {# sort by start time and take the earliest future event #}
              {% set ns.future_events = ns.future_events | sort(attribute='start') %}
              {% set next_event = ns.future_events[0] if ns.future_events | length > 0 else none %}

              {% if next_event %}
                {% set next_start = next_event['start'] | as_datetime | as_local %}
                {% set next_end   = next_event['end']   | as_datetime | as_local %}

                {# If the next event is today and it hasn't finished yet → OFF #}
                {# Otherwise (tomorrow or later) → ON #}
                {% if next_start.date() == now_dt.date() and now_dt <= next_end %}
                  false
                {% else %}
                  true
                {% endif %}
              {% else %}
                false
              {% endif %}
            {% else %}
              false
            {% endif %}

          attributes:
            next_session_start: >
              {# Start time of the next future session (if any) #}
              {% set events = state_attr('event.octopus_energy_z_ZZZZZZZZ_octoplus_free_electricity_session_events','events') %}
              {% set now_dt = now() %}
              {% set ns = namespace(future_events=[]) %}
              {% if events %}
                {% for e in events %}
                  {% if e.start not in [none,''] %}
                    {% set e_start_dt = e.start | as_datetime %}
                    {% if e_start_dt > now_dt %}
                      {% set ns.future_events = ns.future_events + [e] %}
                    {% endif %}
                  {% endif %}
                {% endfor %}
                {% set ns.future_events = ns.future_events | sort(attribute='start') %}
                {% set next_event = ns.future_events[0] if ns.future_events | length > 0 else none %}
                {{ next_event['start'] | as_datetime | as_local if next_event else none }}
              {% else %}
                none
              {% endif %}

            next_session_end: >
              {# End time of the next future session (if any) #}
              {% set events = state_attr('event.octopus_energy_z_ZZZZZZZZ_octoplus_free_electricity_session_events','events') %}
              {% set now_dt = now() %}
              {% set ns = namespace(future_events=[]) %}
              {% if events %}
                {% for e in events %}
                  {% if e.start not in [none,''] %}
                    {% set e_start_dt = e.start | as_datetime %}
                    {% if e_start_dt > now_dt %}
                      {% set ns.future_events = ns.future_events + [e] %}
                    {% endif %}
                  {% endif %}
                {% endfor %}
                {% set ns.future_events = ns.future_events | sort(attribute='start') %}
                {% set next_event = ns.future_events[0] if ns.future_events | length > 0 else none %}
                {{ next_event['end'] | as_datetime | as_local if next_event else none }}
              {% else %}
                none
              {% endif %}

            next_session_duration: >
              {# Duration (minutes) of the next future session (if any) #}
              {% set events = state_attr('event.octopus_energy_z_ZZZZZZZZ_octoplus_free_electricity_session_events','events') %}
              {% set now_dt = now() %}
              {% set ns = namespace(future_events=[]) %}
              {% if events %}
                {% for e in events %}
                  {% if e.start not in [none,''] %}
                    {% set e_start_dt = e.start | as_datetime %}
                    {% if e_start_dt > now_dt %}
                      {% set ns.future_events = ns.future_events + [e] %}
                    {% endif %}
                  {% endif %}
                {% endfor %}
                {% set ns.future_events = ns.future_events | sort(attribute='start') %}
                {% set next_event = ns.future_events[0] if ns.future_events | length > 0 else none %}
                {{ next_event['duration_in_minutes'] | int if next_event else 0 }}
              {% else %}
                0
              {% endif %}

    ######################################################
    # Generate tariff events and selects utility meter
    # settings for free electric sessions
    ######################################################
    - trigger:
        - trigger: time
          at: sensor.octopus_free_electricity_start
      action:
        - event: octopus_tariff
          event_data:
            tariff: "free"
            time: >
              {{now()|as_datetime}}
        - service: select.select_option
          data:
            entity_id: select.daily_grid_import
            option: "free"
        - service: select.select_option
          data:
            entity_id: select.monthly_grid_import
            option: "free"

    - trigger:
        - trigger: state
          entity_id: binary_sensor.free_electricity_today
          from: "on"
          to: "off"
          for:
            minutes: 2
      action:
        - event: octopus_tariff
          event_data:
            tariff: >
              {% if states('binary_sensor.octopus_energy_z_ZZZZZZZZ_intelligent_dispatching') == 'on' %}
                {{"offpeak"}}
              {% else %}
                {{"peak"}}
              {% endif %}
            time: >
              {{now()|as_datetime}}
        - service: select.select_option
          data:
            entity_id: select.daily_grid_import
            option: >
              {% if states('binary_sensor.octopus_energy_z_ZZZZZZZZ_intelligent_dispatching') == 'on' %}
                {{"offpeak"}}
              {% else %}
                {{"peak"}}
              {% endif %}
        - service: select.select_option
          data:
            entity_id: select.monthly_grid_import
            option: >
              {% if states('binary_sensor.octopus_energy_z_ZZZZZZZZ_intelligent_dispatching') == 'on' %}
                {{"offpeak"}}
              {% else %}
                {{"peak"}}
              {% endif %}
################################################################